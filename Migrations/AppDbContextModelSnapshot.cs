// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crp_api.Data;

#nullable disable

namespace crp_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("crp")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("crp_api.Models.Entities.crp_apiRole", b =>
                {
                    b.Property<Guid>("ROLE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ROLE_ID");

                    b.ToTable("crp_apiRole", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.Proof", b =>
                {
                    b.Property<Guid>("PROOF_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REMARKS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("REPORT_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PROOF_ID");

                    b.HasIndex("REPORT_ID");

                    b.ToTable("Proof", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.Report", b =>
                {
                    b.Property<Guid>("REPORT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("BODY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_COMPLETED")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_FILLED")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<Guid?>("REPORTSTATUS_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("REPORTTYPE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("USER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("REPORT_ID");

                    b.HasIndex("REPORTSTATUS_ID");

                    b.HasIndex("REPORTTYPE_ID");

                    b.HasIndex("USER_ID");

                    b.ToTable("REPORTS", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.ReportLog", b =>
                {
                    b.Property<Guid>("REPORTLOG_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("REPORT_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("REPORTLOG_ID");

                    b.HasIndex("REPORT_ID");

                    b.ToTable("REPORTLOGS", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.ReportStatus", b =>
                {
                    b.Property<Guid>("REPORTSTATUS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("REPORTSTATUS_ID");

                    b.ToTable("REPORTSTATUSES", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.ReportType", b =>
                {
                    b.Property<Guid>("REPORTTYPE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("REPORTTYPE_ID");

                    b.ToTable("REPORTTYPES", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.User", b =>
                {
                    b.Property<Guid>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("CREATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DATE_CREATED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DATE_UPDATED")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("LNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ROLE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UPDATED_BY")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("USER_ID");

                    b.HasIndex("ROLE_ID");

                    b.ToTable("USERS", "crp");
                });

            modelBuilder.Entity("crp_api.Models.Entities.Proof", b =>
                {
                    b.HasOne("crp_api.Models.Entities.Report", "REPORT")
                        .WithMany("UPLOADED_PROOFS")
                        .HasForeignKey("REPORT_ID");

                    b.Navigation("REPORT");
                });

            modelBuilder.Entity("crp_api.Models.Entities.Report", b =>
                {
                    b.HasOne("crp_api.Models.Entities.ReportStatus", "REPORTSTATUS")
                        .WithMany("REPORTS")
                        .HasForeignKey("REPORTSTATUS_ID")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("crp_api.Models.Entities.ReportType", "REPORTTYPE")
                        .WithMany("REPORTS")
                        .HasForeignKey("REPORTTYPE_ID")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("crp_api.Models.Entities.User", "USER")
                        .WithMany("REPORTS")
                        .HasForeignKey("USER_ID")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.Navigation("REPORTSTATUS");

                    b.Navigation("REPORTTYPE");

                    b.Navigation("USER");
                });

            modelBuilder.Entity("crp_api.Models.Entities.ReportLog", b =>
                {
                    b.HasOne("crp_api.Models.Entities.Report", "REPORT")
                        .WithMany("REPORTLOGS")
                        .HasForeignKey("REPORT_ID");

                    b.Navigation("REPORT");
                });

            modelBuilder.Entity("crp_api.Models.Entities.User", b =>
                {
                    b.HasOne("crp_api.Models.Entities.crp_apiRole", "ROLE")
                        .WithMany("USERS")
                        .HasForeignKey("ROLE_ID");

                    b.Navigation("ROLE");
                });

            modelBuilder.Entity("crp_api.Models.Entities.crp_apiRole", b =>
                {
                    b.Navigation("USERS");
                });

            modelBuilder.Entity("crp_api.Models.Entities.Report", b =>
                {
                    b.Navigation("REPORTLOGS");

                    b.Navigation("UPLOADED_PROOFS");
                });

            modelBuilder.Entity("crp_api.Models.Entities.ReportStatus", b =>
                {
                    b.Navigation("REPORTS");
                });

            modelBuilder.Entity("crp_api.Models.Entities.ReportType", b =>
                {
                    b.Navigation("REPORTS");
                });

            modelBuilder.Entity("crp_api.Models.Entities.User", b =>
                {
                    b.Navigation("REPORTS");
                });
#pragma warning restore 612, 618
        }
    }
}
